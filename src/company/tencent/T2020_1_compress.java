package tencent;
/*
压缩算法
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
小Q想要给他的朋友发送一个神秘字符串，但是他发现字符串的过于长了，于是小Q发明了一种压缩算法
对字符串中重复的部分进行了压缩，对于字符串中连续的m个相同字符串S将会压缩为
[m|S](m为一个整数且1<=m<=100)，例如字符串ABCABCABC将会被压缩为[3|ABC]，
现在小Q的同学收到了小Q发送过来的字符串，你能帮助他进行解压缩么？
输入例子1:
"HG[3|B[2|CA]]F"
输出例子1:
"HGBCACABCACABCACAF"
例子说明1:
HG[3|B[2|CA]]F?>HG[3|BCACA]F?>HGBCACABCACABCACAF

思路是在遍历字符串的过程中，利用一个堆栈，存储"["和"|"的位置，当遇到"]"时，
他必定与堆栈最上面的"["和"|"匹配，可以将他们出栈，然后用到"["和"]"中间的值去替
换待返回的字符串
 */
public class T2020_1_compress {
//    public String compress (String str) {
//
//    }
}
